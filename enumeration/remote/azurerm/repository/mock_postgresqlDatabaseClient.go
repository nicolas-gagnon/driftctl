// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package repository

import (
	context "context"

	"github.com/Azure/azure-sdk-for-go/sdk/resourcemanager/postgresql/armpostgresql"

	mock "github.com/stretchr/testify/mock"
)

// mockPostgresqlDatabaseClient is an autogenerated mock type for the postgresqlDatabaseClient type
type mockPostgresqlDatabaseClient struct {
	mock.Mock
}

// ListByServer provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *mockPostgresqlDatabaseClient) ListByServer(_a0 context.Context, _a1 string, _a2 string, _a3 *armpostgresql.DatabasesListByServerOptions) (armpostgresql.DatabasesListByServerResponse, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 armpostgresql.DatabasesListByServerResponse
	if rf, ok := ret.Get(0).(func(context.Context, string, string, *armpostgresql.DatabasesListByServerOptions) armpostgresql.DatabasesListByServerResponse); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		r0 = ret.Get(0).(armpostgresql.DatabasesListByServerResponse)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string, string, *armpostgresql.DatabasesListByServerOptions) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
