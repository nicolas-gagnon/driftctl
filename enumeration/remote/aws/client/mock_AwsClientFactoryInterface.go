// Code generated by mockery v2.3.0. DO NOT EDIT.

package client

import (
	aws "github.com/aws/aws-sdk-go/aws"
	mock "github.com/stretchr/testify/mock"

	s3iface "github.com/aws/aws-sdk-go/service/s3/s3iface"
)

// MockAwsClientFactoryInterface is an autogenerated mock type for the AwsClientFactoryInterface type
type MockAwsClientFactoryInterface struct {
	mock.Mock
}

// GetS3Client provides a mock function with given fields: configs
func (_m *MockAwsClientFactoryInterface) GetS3Client(configs ...*aws.Config) s3iface.S3API {
	_va := make([]interface{}, len(configs))
	for _i := range configs {
		_va[_i] = configs[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 s3iface.S3API
	if rf, ok := ret.Get(0).(func(...*aws.Config) s3iface.S3API); ok {
		r0 = rf(configs...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(s3iface.S3API)
		}
	}

	return r0
}
