// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package repository

import (
	rds "github.com/aws/aws-sdk-go/service/rds"
	mock "github.com/stretchr/testify/mock"
)

// MockRDSRepository is an autogenerated mock type for the RDSRepository type
type MockRDSRepository struct {
	mock.Mock
}

// ListAllDBClusters provides a mock function with given fields:
func (_m *MockRDSRepository) ListAllDBClusters() ([]*rds.DBCluster, error) {
	ret := _m.Called()

	var r0 []*rds.DBCluster
	if rf, ok := ret.Get(0).(func() []*rds.DBCluster); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*rds.DBCluster)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAllDBInstances provides a mock function with given fields:
func (_m *MockRDSRepository) ListAllDBInstances() ([]*rds.DBInstance, error) {
	ret := _m.Called()

	var r0 []*rds.DBInstance
	if rf, ok := ret.Get(0).(func() []*rds.DBInstance); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*rds.DBInstance)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAllDBSubnetGroups provides a mock function with given fields:
func (_m *MockRDSRepository) ListAllDBSubnetGroups() ([]*rds.DBSubnetGroup, error) {
	ret := _m.Called()

	var r0 []*rds.DBSubnetGroup
	if rf, ok := ret.Get(0).(func() []*rds.DBSubnetGroup); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*rds.DBSubnetGroup)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
