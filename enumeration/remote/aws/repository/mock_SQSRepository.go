// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package repository

import (
	sqs "github.com/aws/aws-sdk-go/service/sqs"
	mock "github.com/stretchr/testify/mock"
)

// MockSQSRepository is an autogenerated mock type for the SQSRepository type
type MockSQSRepository struct {
	mock.Mock
}

// GetQueueAttributes provides a mock function with given fields: url
func (_m *MockSQSRepository) GetQueueAttributes(url string) (*sqs.GetQueueAttributesOutput, error) {
	ret := _m.Called(url)

	var r0 *sqs.GetQueueAttributesOutput
	if rf, ok := ret.Get(0).(func(string) *sqs.GetQueueAttributesOutput); ok {
		r0 = rf(url)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*sqs.GetQueueAttributesOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(url)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListAllQueues provides a mock function with given fields:
func (_m *MockSQSRepository) ListAllQueues() ([]*string, error) {
	ret := _m.Called()

	var r0 []*string
	if rf, ok := ret.Get(0).(func() []*string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*string)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
